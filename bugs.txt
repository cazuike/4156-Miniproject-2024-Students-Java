Dynamic Bugs found through testing:

Course.java
	- enrollStudent()
		- always returns false
		- can be incremented even when it is impossible to enroll a student
	- dropStudent()
		- always returns false
		- can be decremented even when it is impossible to remove a student
	- isCourseFull()
		- returns the opposite of what it should
	- getInstructorName
		- returns course location
	- getCourseLocation
		- returns instructor name
	- enrolledStudenCount should be 0
Department.java
	- toString()
		is "result.toString()" instead of result.toString()
	- number of majors could be negative, from the dropmajor function
	- number of majors was initially negative
	- departmentChair was "this.departmentChair", should not have "". 
RouteController.java
	-retrieveDepartment has swapped httpStatus codes
		- not_found for ok, and vice versa
	-retrieveCourse - a correct response would return forbidden
	-getMajorCtFromDept returns a negative value
	-getMajorCtFromDept uses wrong status code for not found, uses FORBIDDEN
	-findCourseTime would return "some time" instead of the actual course time"
	-handleException would return with OK status instead of internal error
6 from Course.java, 4 from Department.java, 5 bugs from RouteController.java - 15 bugs in total! (hopefully?)

Static Bugs - used PMD
To utilize PMD, refer to the following and replace "source" with file of interest
pmd check -d "source" -R rulesets/java/quickstart.xml -f text

Static bugs:
add @Override to the toString() methods of Course, Department, myFileDatabase
	- MissingOverride:	The method 'toString()' is missing an @Override annotation.
change HashMap to Map (in all 5 files if i correctly recall)
	- LooseCoupling:	Avoid using implementation types like 'HashMap'; use the interface instead
MyFileDatabase method returns null, instead it now returns an empty map
	- ReturnEmptyCollectionRatherThanNull:	Return an empty collection rather than null.
In RouteController for @RequestParam removed "value" since there is only one parameter.
	- UnnecessaryAnnotationValueElement:	Avoid the use of value in annotations when its the only element


No changes to the names of functions as I believe they are aptly named. Refactoring could be done, but not mentioned in the requirements of the assignment.
